spring:
  application:
    name: lendora-users
  config:
    import: optional:configtree:/run/secrets/
  datasource:
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${USERS_DB_NAME}
    username: ${USERS_DB_USER}
    password: ${users_db_pass}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      idle-timeout: 300000
      connection-timeout: 20000
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: update            # DEV: update; PROD: validate + Flyway
    properties:
      "[hibernate.jdbc.time_zone]": UTC
      "[hibernate.format_sql]": true
      "[hibernate.default_schema]": public

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${AUTH_JWKS_URI}

server:
  port: ${SERVER_PORT:8081}

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      probes:
        enabled: true

lendora:
  security:
    jwt:
      issuer: ${AUTH_ISSUER:http://localhost:8080}   # issuer del ACCESS (y tambi√©n M2M)
      expected-audience: users-service               # debe coincidir con el aud del ACCESS

  m2m:
    issuer: ${AUTH_ISSUER:http://localhost:8080}     # mismo issuer URL que emite Auth
    audience: users-service                          # debe coincidir con el aud del M2M
    required-scopes: users-service.read_auth         # scope exigido para endpoints internos